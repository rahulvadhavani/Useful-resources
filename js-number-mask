<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form with Inline Validation</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <style>
        .error {
            color: red;
        }
    </style>
</head>
<body>

<!-- First Form -->
<form id="numberForm">
    <label for="numberInput">Enter a number:</label>
    <input type="text" id="numberInput" name="numberInput" />

    <button type="submit">Submit</button>
</form>

<hr>

<!-- Second Form with Inline Rules -->
<form id="inlineForm">
    <label for="inlineNumberInput">Enter a number (inline rules):</label>
    <input type="text" 
           id="inlineNumberInput" 
           name="inlineNumberInput" 
           required 
           min="0.001" 
           max="99999.999" 
           step="0.001" 
           title="Please enter a valid number between 0.001 and 99999.999"
           />

    <button type="submit">Submit</button>
</form>

<script>
$(document).ready(function() {
    // Validation for the first form
    $("#numberForm").validate({
        rules: {
            numberInput: {
                required: true,
                number: true,
                min: 0.001,
                max: 99999.999
            }
        },
        messages: {
            numberInput: {
                required: "This field is required.",
                number: "Please enter a valid number.",
                min: "The number must be at least 0.001.",
                max: "The number must be less than or equal to 99999.999."
            }
        }
    });

    // Input validation for the first form
    $("#numberInput").on('input', function() {
        let value = this.value;

        // Allow only numbers and a single dot (.)
        value = value.replace(/[^0-9.]/g, '');

        // Ensure only one dot (.)
        if ((value.match(/\./g) || []).length > 1) {
            value = value.slice(0, -1);
        }

        // Limit to 3 decimal places
        if (value.includes('.')) {
            let parts = value.split('.');
            if (parts[1].length > 3) {
                value = parts[0] + '.' + parts[1].slice(0, 3);
            }
        }

        // Update the input field with the valid value
        this.value = value;
    });

    // Validation for the second form with inline rules
    $("#inlineForm").validate();

    // Input validation for the second form (same as above)
    $("#inlineNumberInput").on('input', function() {
        let value = this.value;

        // Allow only numbers and a single dot (.)
        value = value.replace(/[^0-9.]/g, '');

        // Ensure only one dot (.)
        if ((value.match(/\./g) || []).length > 1) {
            value = value.slice(0, -1);
        }

        // Limit to 3 decimal places
        if (value.includes('.')) {
            let parts = value.split('.');
            if (parts[1].length > 3) {
                value = parts[0] + '.' + parts[1].slice(0, 3);
            }
        }

        // Update the input field with the valid value
        this.value = value;
    });
});
</script>

</body>
</html>
